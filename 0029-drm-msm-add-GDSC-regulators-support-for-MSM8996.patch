From cdbb1e35d1aa81701b9610461c57426f7c76f1b3 Mon Sep 17 00:00:00 2001
From: Stephane Viau <sviau@codeaurora.org>
Date: Thu, 9 Jul 2015 17:09:52 -0400
Subject: [PATCH 29/41] drm/msm: add GDSC regulators support for MSM8996

power-domains property node is not available in msm-3.18
kernel, we still need to get the regulator manually.
For some targets (eg: msm8996 v2), Venus GDSC needs to be turned
on before MDSS GDSC due to some hardware limitation.
On newer kernel, adding an entry in 'power-domains' property
is enough; but for older one, we need to manually get/enable
this regulator.

Change-Id: I97f823e98fbef47ffa77cfae068402f1bb2d2683
Signed-off-by: Stephane Viau <sviau@codeaurora.org>
---
 drivers/gpu/drm/msm/hdmi/hdmi.c         |  7 +++++--
 drivers/gpu/drm/msm/mdp/mdp5/mdp5_kms.c | 20 ++++++++++++++++++++
 drivers/gpu/drm/msm/mdp/mdp5/mdp5_kms.h |  1 +
 3 files changed, 26 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/msm/hdmi/hdmi.c b/drivers/gpu/drm/msm/hdmi/hdmi.c
index 53a2228..dd1ea35 100644
--- a/drivers/gpu/drm/msm/hdmi/hdmi.c
+++ b/drivers/gpu/drm/msm/hdmi/hdmi.c
@@ -379,10 +379,12 @@ static struct hdmi_platform_config hdmi_tx_8994_config = {
 		.hpd_freq      = hpd_clk_freq_8x74,
 };
 
+static const char *hpd_reg_names_8x96[] = {"hpd-gdsc-venus", "hpd-gdsc"};
+
 static struct hdmi_platform_config hdmi_tx_8996_config = {
 		.phy_init = NULL,
 		HDMI_CFG(pwr_reg, none),
-		HDMI_CFG(hpd_reg, none),
+		HDMI_CFG(hpd_reg, 8x96),
 		HDMI_CFG(pwr_clk, 8x74),
 		HDMI_CFG(hpd_clk, 8x74),
 		.hpd_freq      = hpd_clk_freq_8x74,
@@ -399,7 +401,8 @@ static const struct of_device_id dt_match[] = {
 };
 
 #ifdef CONFIG_OF
-static int get_gpio(struct device *dev, struct device_node *of_node, const char *name)
+static int get_gpio(struct device *dev, struct device_node *of_node,
+			const char *name)
 {
 	int gpio = of_get_named_gpio(of_node, name, 0);
 	if (gpio < 0) {
diff --git a/drivers/gpu/drm/msm/mdp/mdp5/mdp5_kms.c b/drivers/gpu/drm/msm/mdp/mdp5/mdp5_kms.c
index 1ab9a60..edbe4f2 100644
--- a/drivers/gpu/drm/msm/mdp/mdp5/mdp5_kms.c
+++ b/drivers/gpu/drm/msm/mdp/mdp5/mdp5_kms.c
@@ -198,6 +198,10 @@ static void mdp5_destroy(struct msm_kms *kms)
 	if (mdp5_kms->cfg)
 		mdp5_cfg_destroy(mdp5_kms->cfg);
 
+	regulator_disable(mdp5_kms->vdd);
+	if (mdp5_kms->venus)
+		regulator_disable(mdp5_kms->venus);
+
 	kfree(mdp5_kms);
 }
 
@@ -558,6 +562,22 @@ struct msm_kms *mdp5_kms_init(struct drm_device *dev)
 		goto fail;
 	}
 
+	mdp5_kms->venus = devm_regulator_get_optional(&pdev->dev, "gdsc-venus");
+	if (IS_ERR(mdp5_kms->venus)) {
+		ret = PTR_ERR(mdp5_kms->venus);
+		DBG("failed to get Venus GDSC regulator: %d\n", ret);
+		mdp5_kms->venus = NULL;
+	}
+
+	if (mdp5_kms->venus) {
+		ret = regulator_enable(mdp5_kms->venus);
+		if (ret) {
+			dev_err(dev->dev,
+				"failed to enable venus GDSC: %d\n", ret);
+			goto fail;
+		}
+	}
+
 	mdp5_kms->vdd = devm_regulator_get(&pdev->dev, "vdd");
 	if (IS_ERR(mdp5_kms->vdd)) {
 		ret = PTR_ERR(mdp5_kms->vdd);
diff --git a/drivers/gpu/drm/msm/mdp/mdp5/mdp5_kms.h b/drivers/gpu/drm/msm/mdp/mdp5/mdp5_kms.h
index 8c83e20..24aebb6 100644
--- a/drivers/gpu/drm/msm/mdp/mdp5/mdp5_kms.h
+++ b/drivers/gpu/drm/msm/mdp/mdp5/mdp5_kms.h
@@ -47,6 +47,7 @@ struct mdp5_kms {
 
 	struct regulator *vdd;
 	struct regulator *mmagic;
+	struct regulator *venus;
 
 	struct clk *axi_clk;
 	struct clk *ahb_clk;
-- 
2.8.2

