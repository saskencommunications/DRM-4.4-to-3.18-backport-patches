From 6f6b0ec42953acfb081c63ed7d651b5b6063f4df Mon Sep 17 00:00:00 2001
From: Yajun Li <yajunl@codeaurora.org>
Date: Sat, 11 Jun 2016 04:24:08 +0800
Subject: [PATCH 09/10] drm:msm add hang dump function

Change-Id: I3b0bc34f0ebcc2d24ab382f018bc4694074b558e
Signed-off-by: Yajun Li <yajunl@codeaurora.org>
---
 drivers/gpu/drm/msm/msm_gpu.c | 56 ++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 55 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/msm/msm_gpu.c b/drivers/gpu/drm/msm/msm_gpu.c
index f755b4b..e01009f 100644
--- a/drivers/gpu/drm/msm/msm_gpu.c
+++ b/drivers/gpu/drm/msm/msm_gpu.c
@@ -495,6 +495,58 @@ void msm_gpu_retire(struct msm_gpu *gpu)
 	update_sw_cntrs(gpu);
 }
 
+int msm_gpu_cmd_dump(struct msm_gpu *gpu, struct msm_gem_submit *submit)
+{
+	int i, j;
+	struct msm_gem_object *msm_obj;
+	
+	DRM_INFO("%s: dump cmd buffer\n", __func__);
+	DRM_INFO("**********************************************\n");
+	for (i = 0; i < submit->nr_cmds; i++) {
+		int submit_idx = submit->cmd[i].idx;
+		void *vaddr;
+		unsigned int offset;
+		int *command;
+
+		DRM_INFO("CMD_TYPE: 0x%x\n", submit->cmd[i].type);
+
+		msm_obj = submit->bos[submit_idx].obj;
+		if (!msm_obj) {
+			DRM_INFO("%s:cmd[%d] has no bo\n", __func__, i);
+			return -1;
+		}
+
+		offset = submit->cmd[i].iova - submit->bos[submit_idx].iova;
+		vaddr = msm_gem_vaddr_locked(&msm_obj->base);
+
+		DRM_INFO("cmd[%d]: vaddr = %p\n", i, vaddr);
+
+		command = (int*)((char*)vaddr + offset);
+
+		for (j = submit->cmd[i].size; j > 0;) {
+			if (j >= 4) {
+				DRM_INFO("	0x%08x 0x%08x 0x%08x 0x%08x\n",
+					command[0], command[1], command[2], command[3]);
+				command += 4;
+				j-=4;
+			} else if (j == 3) {
+				DRM_INFO("	0x%08x 0x%08x 0x%08x\n",
+					command[0], command[1], command[2]);
+				break;
+			} else if (j == 2) {
+				DRM_INFO("	0x%08x 0x%08x\n",
+					command[0], command[1]);
+				break;
+			} else if (j==1) {
+				DRM_INFO("	0x%08x\n", command[0]);
+				break;
+			}
+		}
+	}
+	DRM_INFO("**********************************************\n");
+	return 0;
+}
+
 /* add bo's to gpu's ring, and kick gpu: */
 int msm_gpu_submit(struct msm_gpu *gpu, struct msm_gem_submit *submit,
 		struct msm_file_private *ctx)
@@ -545,8 +597,10 @@ int msm_gpu_submit(struct msm_gpu *gpu, struct msm_gem_submit *submit,
 	}
 
 	ret = gpu->funcs->submit(gpu, submit, ctx);
-	if (priv->force_submit && gpu->funcs->idle(gpu))
+	if (priv->force_submit && gpu->funcs->idle(gpu)) {
 		DRM_ERROR("%s: hardware hang\n", __func__);
+		msm_gpu_cmd_dump(gpu, submit);
+	}
 	priv->lastctx = ctx;
 
 	hangcheck_timer_reset(gpu);
-- 
1.9.1

